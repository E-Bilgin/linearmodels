# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'

steps:


- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip "setuptools<50.0"
    pip install -r requirements.txt
    pip install -r requirements-dev.txt
    jupyter kernelspec list
  displayName: 'Install dependencies'

- script: |
    pip install -e . -v --no-build-isolation
  displayName: 'Build Cython Extensions'

- script: |
    pytest linearmodels --junitxml=junit/test-results.xml -n 2 --durations=25
  displayName: 'pytest'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/test-results.xml'
    testRunTitle: 'Python $(python.version)'
  condition: succeededOrFailed()
